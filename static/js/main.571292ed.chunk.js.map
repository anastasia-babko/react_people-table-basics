{"version":3,"sources":["components/NavbarItem/NavbarItem.tsx","components/Navbar/Navbar.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["NavbarItem","to","text","className","isActive","classNames","Navbar","role","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","name","sex","slug","isWoman","PeopleTabel","people","useParams","personSlug","checkName","useCallback","parentName","foundPerson","find","parent","map","born","died","fatherName","motherName","PeoplePage","useState","setPeople","hasLoadingError","setHasLoadingError","hasErrorEmpty","setHasErrorEmpty","isLoading","setIsLoading","loadPeopleFromServer","peopleFromServer","length","useEffect","HomePage","NotFoundPage","App","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.571292ed.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const NavbarItem: FC<Props> = ({\n  to,\n  text,\n}) => {\n  return (\n    <NavLink\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n      to={to}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { FC } from 'react';\nimport { NavbarItem } from '../NavbarItem/NavbarItem';\n\nexport const Navbar: FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavbarItem to=\"/\" text=\"Home\" />\n        <NavbarItem to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n  const isWoman = sex === 'f';\n\n  return (\n    <Link\n      className={classNames({ 'has-text-danger': isWoman })}\n      to={`/people/${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import React, { useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTabel: React.FC<Props> = ({ people }) => {\n  const { personSlug = '' } = useParams();\n\n  const checkName = useCallback((parentName: string | null) => {\n    if (!parentName) {\n      return '-';\n    }\n\n    const foundPerson = people.find(parent => parent.name === parentName);\n\n    return foundPerson ? <PersonLink person={foundPerson} /> : parentName;\n  }, [people]);\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex, born, died, fatherName, motherName, slug,\n          } = person;\n\n          return (\n            <tr\n              key={slug}\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': personSlug === person.slug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>{checkName(motherName)}</td>\n              <td>{checkName(fatherName)}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTabel } from '../components/PeopleTable/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n  const [hasErrorEmpty, setHasErrorEmpty] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const loadPeopleFromServer = async () => {\n    setIsLoading(true);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      if (peopleFromServer.length === 0) {\n        setHasErrorEmpty(true);\n      }\n\n      setPeople(peopleFromServer);\n    } catch (error) {\n      setHasLoadingError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    loadPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasLoadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {hasErrorEmpty && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0 && <PeopleTabel people={people} />}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Route, Routes, Navigate } from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components/Navbar/Navbar';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}